@using MrKupido.Web.Core.Models
@this.ScriptBlock(
    @<script type="text/javascript">
         var lastItemDisplayString = "";
         var lastAutoCompleteLength = 0;

         $(function () {
             $("#query").keydown(function (e) {
                 lastItemDisplayString = "";

                 var code = e.which; // recommended to use e.which, it's normalized across browsers

                 // switch to positive query
                 if (code == 107 || code == 189 || code == 187) {
                     positiveQuerySign();
                     e.preventDefault();
                 }

                 // switch to negative query
                 if (code == 109 || code == 189) {
                     negativeQuerySign();
                     e.preventDefault();
                 }

                 if (this.value == "") {
                     // space, enter
                     if (code == 32 || code == 13) {
                         e.preventDefault();
                     }

                     // left or page up
                     if (code == 37 || code == 33) {
                         $("#pageprev").trigger("onclick");
                         e.preventDefault();
                     }
                     // right or page down
                     if (code == 39 || code == 34) {
                         $("#pagenext").trigger("onclick");
                         e.preventDefault();
                     }
                     // home
                     if (code == 36) {
                         $("#pagefirst").trigger("onclick");
                         e.preventDefault();
                     }
                     // end
                     if (code == 35) {
                         $("#pagelast").trigger("onclick");
                         e.preventDefault();
                     }
                     // del
                     if (code == 46) {
                         deleteFilter("!first");
                         e.preventDefault();
                     }
                     // backspace
                     if (code == 8) {
                         deleteFilter("!last");
                         e.preventDefault();
                     }
                 } else {
                     // enter
                     if (code == 13) {
                         if (lastAutoCompleteLength == 0) {
                             $("input#query.ui-autocomplete-input").css('color', 'red').animate({ color: '#553e31' }, { duration: 1000, easing: "easeOutCubic", queue: false });

                             $.ajax({
                                 url: '@Url.Action("QueryWordUnknown", "Home")',
                                 type: "POST",
                                 dataType: "json",
                                 data: {
                                     word: $("input#query.ui-autocomplete-input")[0].value,
                                 }
                             }); // ajax
                         }
                         e.preventDefault();
                     }
                 }
             });

             $("#query").autocomplete({
                 source: function (request, response) {
                     $.ajax({
                         url: '@Url.Action("SearchAutocomplete", "Home")',
                         type: "POST",
                         dataType: "json",
                         data: {
                             featureClass: "P",
                             style: "full",
                             maxRows: 12,
                             name_startsWith: request.term
                         },
                         success: function (data) {
                             lastAutoCompleteLength = data.length;
                             response($.map(data, function (item) {
                                 return {
                                     displayString: item.DisplayString,
                                     searchString: item.SearchString,
                                     label: item.SearchString,
                                     value: item.NodeType + ":" + item.UniqueName,
                                     icon: item.IconUrl
                                 }
                             }) // map
                             ); // response
                         }, // success
                         error: function (xhr, textStatus, errorThrown) {
                         } // error
                     }); // ajax
                 },
                 minLength: 2,
                 delay: 200,
                 autoSelect: true,
                 autoFocus: true,
                 select: searchKeywordSelected,
                 open: function () {
                     $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                 },
                 close: function () {
                     $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                 },
                 focus: function (event, ui) {
                     event.preventDefault();
                 }
             })

            .data("autocomplete")._renderItem = function (ul, item) {
                // remove duplicates
                if (lastItemDisplayString == item.displayString) return ul;
                lastItemDisplayString = item.displayString;

                // show one item
                return $('<li class="ui-menu-item-with-icon"></li>')
                    .data("item.autocomplete", item)
                    .append('<a><img class="ui-menu-item-icon" src="' + item.icon + '" />' + item.displayString + '</a>')
                    .appendTo(ul);
            };

         });

         function searchKeywordSelected(event, ui) {
             _gaq.push(['_trackEvent', 'UserAction', 'Search', ui.item ? ui.item.value : this.value]);

             $.ajax({
                 url: '@Url.Action("SearchSelected", "Home")',
                type: "POST",
                dataType: "json",
                data: {
                    selectedValue: ui.item ? ui.item.value : this.value,
                    wasItemSelected: ui.item != null,
                    isNegative: $("#querySign").html() == "-"
                },
                success: function (data) {
                    refreshFilters(data);
                    $("#querySign").html("+");
                }, // success
                error: function (xhr, textStatus, errorThrown) {
                } // error
            }); // ajax
            $(this).val(''); return false;
        };

        function refreshFilters(filters, invokeDoSearch) {
            invokeDoSearch = typeof invokeDoSearch !== 'undefined' ? invokeDoSearch : true;

            ulBody = '';

            for (x = 0; x < filters.length; x++) {
                ulBody += '<li>' + filters[x].Text + ' <a href="javascript:deleteFilter(\'' + filters[x].Value + '\'); doSearch();">x</a></li>';
            }

            $('#filters').empty();
            $('#filters').append('<ul>' + ulBody + '</ul>');

            if (invokeDoSearch) {
                $("#query").attr('readonly', false);
                $("div#filters ul li a").removeClass('disabled');
                $("div#deleteall").removeClass('disabled');

                doSearch();
            } else {
                $("#query").attr('readonly', true);
                $("div#filters ul li a").addClass('disabled');
                $("div#deleteall").addClass('disabled');
            }
        };

        function deleteFilter(filterValue, invokeDoSearch) {
            $.ajax({
                url: '@Url.Action("DeleteFilter", "Home")',
                type: "POST",
                dataType: "json",
                data: {
                    value: filterValue
                },
                success: function (data) {
                    refreshFilters(data, invokeDoSearch);
                }, // success
                error: function (xhr, textStatus, errorThrown) {
                } // error
            }); // ajax
        }


        function positiveQuerySign() {
            $("#querySign").html("+");
            $("#queryminusbutton").removeAttr('disabled');
            $("#queryplusbutton").attr('disabled', 'disabled');
        }

        function negativeQuerySign() {
            $("#querySign").html("-");
            $("#queryplusbutton").removeAttr('disabled');
            $("#queryminusbutton").attr('disabled', 'disabled');
        }

        $(document).ready(function () {
            var knownLocation = "@(new HtmlString(Session["Location"] as string))";

             if (knownLocation == "") {
                 if (navigator.geolocation) {
                     navigator.geolocation.getCurrentPosition(geolocationSuccess, geolocationError);
                 }
             } else {
                 document.querySelector('#locationtxt').innerText = knownLocation;
             }
         });

             function geolocationSuccess(position) {
                 var s = document.querySelector('#locationtxt');

                 $.ajax({
                     url: '@Url.Action("GetLocationName", "Home")',
                type: "POST",
                dataType: "json",
                data: {
                    lat: position.coords.latitude,
                    lon: position.coords.longitude
                },
                success: function (locationText) {
                    if (locationText == null) {
                        s.innerText = Math.round(position.coords.latitude * 100000) / 100000 + ", " + Math.round(position.coords.longitude * 100000) / 100000;
                    } else {
                        s.innerText = locationText;
                    }
                }, // success
                error: function (xhr, textStatus, errorThrown) {
                    s.value = Math.round(position.coords.latitude * 100000) / 100000 + ", " + Math.round(position.coords.longitude * 100000) / 100000;
                }
            }); // ajax
        }

        function geolocationError(msg) {
            var s = document.querySelector('#locationtxt');
            s.innerText = "";
        }

        $(document).ready(function () {

            $("#menu-trigger").on("click", function () {
                $("header ul#user-menu").toggle();
            });

            $(".language-menu-trigger").on("click", function () {
                $("header ul#language-menu").toggle();
            });

            // iPad
            var isiPad = navigator.userAgent.match(/iPad/i) != null;
            if (isiPad) $('#user-menu ul').addClass('no-transition');

            // get the profile pic
            var avatarImg = $("img#avatar");
            var originalSrc = avatarImg.attr("src");

            if ("@(Session.IsAvatarCached().ToString().ToLower())" == "false") {
                     avatarImg.css({ opacity: 0.0 }).attr("src", "@Session.GetCurrentUserAvatarUrl(true)").load(function () {
                         if (this.complete && typeof this.naturalWidth != "undefined" && this.naturalWidth != 0) {
                             $(this).stop().animate({ opacity: '1' }, 1500);
                             $.isAvatarCached = true;
                         }
                     });
                 }
             });
    </script>
)

<a runat="server" href="~/@Session["Language"]">
    <img runat="server" src="~/Content/svg/logo_mrkupido.svg" alt="Mr. Kupido" width="200" height="152" />
</a>
<div class="userbar">
    @if (Session.GetCurrentUser() == null)
    {
        <a runat="server" href="~/@Session["Language"]/Account/LogIn">
            <img runat="server" src="~/Content/svg/icon_avatar.svg" alt="Avatar" width="50" height="50" />
        </a>
    }
    @if (Session.GetCurrentUser() != null)
    {
        <img runat="server" src="~/Content/svg/icon_avatar.svg" alt="Avatar" width="50" height="50" />
        <img runat="server" id="avatar" src="@(Session.IsAvatarCached() ? Session.GetCurrentUserAvatarUrl(false) : "~/Content/svg/icon_avatar.svg")" alt="Avatar" width="50" height="50" />
        <img runat="server" id="menu-trigger" src="~/Content/svg/icon_menutrigger.svg" alt="Menu" width="11" height="9" />
        <nav class="menuwrap">
            <ul id="user-menu" class="menu">
                <li><a href="#">@MrKupido.Web.Core.Resources.Shared.SearchHeader.Language</a>
                    <ul id="user-language-menu">
                        <li><a href="~/hun">@MrKupido.Web.Core.Resources.Shared.SearchHeader.LanguageHun</a></li>
                        <li><a href="~/eng">@MrKupido.Web.Core.Resources.Shared.SearchHeader.LanguageEng</a></li>
                        <li><a href="~/deu" style="text-decoration: line-through;">@MrKupido.Web.Core.Resources.Shared.SearchHeader.LanguageDeu</a></li>
                        <li><a href="~/spa" style="text-decoration: line-through;">@MrKupido.Web.Core.Resources.Shared.SearchHeader.LanguageSpa</a></li>
                    </ul>
                </li>
                <li><a href="~/@Session["Language"]/account/profile">@MrKupido.Web.Core.Resources.Shared.SearchHeader.Profile</a></li>
                <li><a href="~/@Session["Language"]/ingredient/trees">@MrKupido.Web.Core.Resources.Shared.SearchHeader.Taxonomy</a></li>
                <li><a href="~/@Session["Language"]/import/recipelist">@MrKupido.Web.Core.Resources.Shared.SearchHeader.Import</a></li>
                <li><a href="~/@Session["Language"]/help">@MrKupido.Web.Core.Resources.Shared.SearchHeader.Help</a></li>
                <li><a href="~/@Session["Language"]/account/logout">@MrKupido.Web.Core.Resources.Shared.SearchHeader.Logout</a></li>
            </ul>
        </nav>
    }
</div>
<div class="searchbox">
    <div class="mainmenu">
        <img runat="server" src="~/Content/svg/menu_language.svg" width="91" height="31" class="language-menu-trigger" />
        <img runat="server" src="~/Content/svg/menu_location.svg" width="91" height="31" />
        <a href="~/@Session["Language"]">
            <img runat="server" src="~/Content/svg/menu_recipes.svg" width="91" height="31" />
        </a>
        <a href="~/@Session["Language"]/account/profile">
            <img runat="server" src="~/Content/svg/menu_profile.svg" width="91" height="31" />
        </a>
        <a href="~/@Session["Language"]/help">
            <img runat="server" src="~/Content/svg/menu_help.svg" width="91" height="31" />
        </a>
        <nav class="menuwrap">
            <ul id="language-menu" class="menu">
                <li><a href="~/hun">@MrKupido.Web.Core.Resources.Shared.SearchHeader.LanguageHun</a></li>
                <li><a href="~/eng">@MrKupido.Web.Core.Resources.Shared.SearchHeader.LanguageEng</a></li>
                <li><a href="~/deu" style="text-decoration: line-through;">@MrKupido.Web.Core.Resources.Shared.SearchHeader.LanguageDeu</a></li>
                <li><a href="~/spa" style="text-decoration: line-through;">@MrKupido.Web.Core.Resources.Shared.SearchHeader.LanguageSpa</a></li>
            </ul>
        </nav>
        <label id="languagetxt" class="language-menu-trigger">@Session.GetCurrentLanguageString()</label>
        <label id="locationtxt">@MrKupido.Web.Core.Resources.Shared.SearchHeader.Location</label>
        <label id="recipestxt"><a href="~/@Session["Language"]">@MrKupido.Web.Core.Resources.Shared.SearchHeader.Recipes</a></label>
        <label id="profiletxt">
            <a href="~/@Session["Language"]/account/profile">
            @if (Session.GetCurrentUser() == null)
            {
                @MrKupido.Web.Core.Resources.Shared.SearchHeader.Profile
            }
            else
            {
                @Session.GetCurrentUserDisplayName()
            }
            </a>
        </label>
        <label id="helptxt"><a href="~/@Session["Language"]/help">@MrKupido.Web.Core.Resources.Shared.SearchHeader.Help</a></label>
    </div>
    <p class="inputfield">
        <label for="query">
            @MrKupido.Web.Core.Resources.Shared.SearchHeader.Query:</label>
        <span id="querySign" style="display: none">+</span>
        <span id="querySignButtons">
            <input type="button" id="queryplusbutton" value="+" onclick="positiveQuerySign();" class="littlebutton" disabled="disabled" /><br />
            <input type="button" id="queryminusbutton" value="-" onclick="negativeQuerySign();" class="littlebutton" />
        </span>

        <input id="query" type="search" placeholder="@MrKupido.Web.Core.Resources.Shared.SearchHeader.QueryPlaceholder" autofocus />
    </p>
    <div id="deleteall">
        <input type="button" value="@MrKupido.Web.Core.Resources.Shared.SearchHeader.DeleteAll" onclick="deleteFilter();" />
    </div>
    <div id="filters">
        <ul>
        </ul>
    </div>
</div>
