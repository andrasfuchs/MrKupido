//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace MrKupidoServices
{
    public partial class MrKupidoEntities : ObjectContext
    {
        public const string ConnectionString = "name=MrKupidoEntities";
        public const string ContainerName = "MrKupidoEntities";
    
        #region Constructors
    
        public MrKupidoEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public MrKupidoEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public MrKupidoEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<Element> Elements
        {
            get { return _elements  ?? (_elements = CreateObjectSet<Element>("Elements")); }
        }
        private ObjectSet<Element> _elements;
    
        public ObjectSet<Ingredient> Ingredients
        {
            get { return _ingredients  ?? (_ingredients = CreateObjectSet<Ingredient>("Ingredients")); }
        }
        private ObjectSet<Ingredient> _ingredients;
    
        public ObjectSet<Log> Logs
        {
            get { return _logs  ?? (_logs = CreateObjectSet<Log>("Logs")); }
        }
        private ObjectSet<Log> _logs;
    
        public ObjectSet<Nutrition> Nutritions
        {
            get { return _nutritions  ?? (_nutritions = CreateObjectSet<Nutrition>("Nutritions")); }
        }
        private ObjectSet<Nutrition> _nutritions;
    
        public ObjectSet<Rating> Ratings
        {
            get { return _ratings  ?? (_ratings = CreateObjectSet<Rating>("Ratings")); }
        }
        private ObjectSet<Rating> _ratings;
    
        public ObjectSet<Recipe> Recipes
        {
            get { return _recipes  ?? (_recipes = CreateObjectSet<Recipe>("Recipes")); }
        }
        private ObjectSet<Recipe> _recipes;
    
        public ObjectSet<RecipeTag> RecipeTags
        {
            get { return _recipeTags  ?? (_recipeTags = CreateObjectSet<RecipeTag>("RecipeTags")); }
        }
        private ObjectSet<RecipeTag> _recipeTags;
    
        public ObjectSet<Tag> Tags
        {
            get { return _tags  ?? (_tags = CreateObjectSet<Tag>("Tags")); }
        }
        private ObjectSet<Tag> _tags;
    
        public ObjectSet<User> Users
        {
            get { return _users  ?? (_users = CreateObjectSet<User>("Users")); }
        }
        private ObjectSet<User> _users;

        #endregion
    }
}
